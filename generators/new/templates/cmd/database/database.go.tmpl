package database

import (
  "embed"

  "github.com/swifcarrot/dashi/database"
  "github.com/gobuffalo/pop"
  "{{ .opts.Package }}/config"
)

var MigrationsFS embed.FS

func Connect() (*pop.Connection, error) {
  config, err := config.Load()
  if err != nil {
    return nil, err
  }

  conn, err := pop.NewConnection(config.Database)
  if err != nil {
    return nil, err
  }

  err = conn.Open()
  if err != nil {
    return nil, err
  }

  return conn, nil
}

func DatabaseCreate() error {
  conn, err := Connect()
  defer conn.Close()
  if err != nil {
    return err
  }

  return pop.CreateDB(conn)
}

func DatabaseDrop() error {
  conn, err := Connect()
  defer conn.Close()
  if err != nil {
    return err
  }

  return pop.DropDB(conn)
}

func DatabaseMigrate() error {
  conn, err := Connect()
  defer conn.Close()
  if err != nil {
    return err
  }

  mig, err := database.NewEmbedMigrator(&MigrationsFS, conn)
  if err != nil {
    return err
  }
  return mig.Up()
}

func DatabaseRollback() error {
  conn, err := Connect()
  defer conn.Close()
  if err != nil {
    return err
  }

  mig, err := database.NewEmbedMigrator(&MigrationsFS, conn)
  if err != nil {
    return err
  }
  return mig.Down(1)
}

type {{ .opts.Name.String }} {
	{{- range .opts.Attrs }}
		{{ .Name.String | camelize  }}: {{ .GraphqlType }}
	{{- end }}
	createdAt: Time!
	updatedAt: Time!
}

type {{.opts.Name.String}}Items {
	items: [{{ .opts.Name.String }}]!
	pagination: Pagination
}

input Create{{ .opts.Name.String }}Input {
	{{- range .opts.Attrs -}}
		{{- if ne .Name.Camelize.String "ID"  }}
			{{ .Name.Camelize }}: {{ .GraphqlType }}
		{{- end }}
	{{- end }}
}

input Update{{ .opts.Name.String }}Input {
	{{- range .opts.Attrs -}}
		{{- if ne .Name.Camelize.String "ID"  }}
			{{ .Name.Camelize }}: {{ .GraphqlType }}
		{{- end }}
	{{- end }}
}

extend type Query {
	{{ .opts.Name.Singularize.Camelize }}(id: ID!): {{ .opts.Name }}
	{{ .opts.Name.Pluralize.Camelize }}(page: Int, perPage: Int): {{.opts.Name.String}}Items
}

extend type Mutation {
  create{{ .opts.Name }}(input: Create{{ .opts.Name }}Input!): {{ .opts.Name }}
  update{{ .opts.Name }}(id: ID!, input: Update{{ .opts.Name }}Input!): {{ .opts.Name }}
  delete{{ .opts.Name }}(id: ID!): {{ .opts.Name }}
}
